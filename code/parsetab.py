
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AC AOTA AOTF APR BINARY BOOL COMENTARIO DATA DOTTEDKEY DP FC FLOAT FPR HEXADECIMAL IGUAL INDIANFORMAT INT MULTILINESTRING NAMETAG OCTAL SIGNALINTS STRING SUBTAG SUBTAGA TAGA TIME VAR VIRG\n    toml : sections\n    \n    sections : sections section\n             | section\n    \n    section : TAGA NAMETAG FPR content\n\t        | TAGA NAMETAG FPR\n    \n    section : TAGA SUBTAG FPR content\n\t        | TAGA SUBTAG FPR\n    \n    section : statement\n    \n    section : AOTA NAMETAG AOTF content\n            | AOTA NAMETAG AOTF\n    \n    content : content statement\n            | statement\n    \n    statement : VAR IGUAL value\n    \n    statement : DOTTEDKEY IGUAL value\n    \n    value : DATA\n          | TIME\n          | list\n          | inlinetable\n    \n    inlinetable : AC vars FC\n    \n    vars : vars VIRG var\n         | var\n    \n    var : VAR IGUAL value\n    \n    value : INT\n    \n    value : INDIANFORMAT\n    \n    value : SIGNALINTS\n    \n    value : OCTAL\n    \n    value : HEXADECIMAL\n    \n    value : BINARY\n    \n    value : FLOAT\n    \n    value : STRING\n    \n    value : MULTILINESTRING\n    \n    value : BOOL\n    \n    list : APR elements FPR\n    \n    elements : elements VIRG value\n             | value\n    '
    
_lr_action_items = {'TAGA':([0,2,3,5,9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,45,46,48,],[4,4,-3,-8,-2,-5,-7,-10,-13,-15,-16,-17,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-14,-4,-12,-6,-9,-11,-33,-19,]),'AOTA':([0,2,3,5,9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,45,46,48,],[6,6,-3,-8,-2,-5,-7,-10,-13,-15,-16,-17,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-14,-4,-12,-6,-9,-11,-33,-19,]),'VAR':([0,2,3,5,9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,45,46,48,49,],[7,7,-3,-8,-2,7,7,7,-13,-15,-16,-17,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,44,-14,7,-12,7,7,-11,-33,-19,44,]),'DOTTEDKEY':([0,2,3,5,9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,45,46,48,],[8,8,-3,-8,-2,8,8,8,-13,-15,-16,-17,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-14,8,-12,8,8,-11,-33,-19,]),'$end':([1,2,3,5,9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,45,46,48,],[0,-1,-3,-8,-2,-5,-7,-10,-13,-15,-16,-17,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-14,-4,-12,-6,-9,-11,-33,-19,]),'NAMETAG':([4,6,],[10,12,]),'SUBTAG':([4,],[11,]),'IGUAL':([7,8,44,],[13,14,50,]),'FPR':([10,11,19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,41,46,48,51,],[15,16,-15,-16,-17,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,46,-35,-33,-19,-34,]),'AOTF':([12,],[17,]),'DATA':([13,14,33,47,50,],[19,19,19,19,19,]),'TIME':([13,14,33,47,50,],[20,20,20,20,20,]),'INT':([13,14,33,47,50,],[23,23,23,23,23,]),'INDIANFORMAT':([13,14,33,47,50,],[24,24,24,24,24,]),'SIGNALINTS':([13,14,33,47,50,],[25,25,25,25,25,]),'OCTAL':([13,14,33,47,50,],[26,26,26,26,26,]),'HEXADECIMAL':([13,14,33,47,50,],[27,27,27,27,27,]),'BINARY':([13,14,33,47,50,],[28,28,28,28,28,]),'FLOAT':([13,14,33,47,50,],[29,29,29,29,29,]),'STRING':([13,14,33,47,50,],[30,30,30,30,30,]),'MULTILINESTRING':([13,14,33,47,50,],[31,31,31,31,31,]),'BOOL':([13,14,33,47,50,],[32,32,32,32,32,]),'APR':([13,14,33,47,50,],[33,33,33,33,33,]),'AC':([13,14,33,47,50,],[34,34,34,34,34,]),'VIRG':([19,20,21,22,23,24,25,26,27,28,29,30,31,32,40,41,42,43,46,48,51,52,53,],[-15,-16,-17,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,47,-35,49,-21,-33,-19,-34,-20,-22,]),'FC':([19,20,21,22,23,24,25,26,27,28,29,30,31,32,42,43,46,48,52,53,],[-15,-16,-17,-18,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,48,-21,-33,-19,-20,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'toml':([0,],[1,]),'sections':([0,],[2,]),'section':([0,2,],[3,9,]),'statement':([0,2,15,16,17,36,38,39,],[5,5,37,37,37,45,45,45,]),'value':([13,14,33,47,50,],[18,35,41,51,53,]),'list':([13,14,33,47,50,],[21,21,21,21,21,]),'inlinetable':([13,14,33,47,50,],[22,22,22,22,22,]),'content':([15,16,17,],[36,38,39,]),'elements':([33,],[40,]),'vars':([34,],[42,]),'var':([34,49,],[43,52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> toml","S'",1,None,None,None),
  ('toml -> sections','toml',1,'p_toml','criaDicionario.py',12),
  ('sections -> sections section','sections',2,'p_sections','criaDicionario.py',19),
  ('sections -> section','sections',1,'p_sections','criaDicionario.py',20),
  ('section -> TAGA NAMETAG FPR content','section',4,'p_section','criaDicionario.py',57),
  ('section -> TAGA NAMETAG FPR','section',3,'p_section','criaDicionario.py',58),
  ('section -> TAGA SUBTAG FPR content','section',4,'p_section_subtag','criaDicionario.py',68),
  ('section -> TAGA SUBTAG FPR','section',3,'p_section_subtag','criaDicionario.py',69),
  ('section -> statement','section',1,'p_section_statements','criaDicionario.py',81),
  ('section -> AOTA NAMETAG AOTF content','section',4,'p_section_aot_nametag','criaDicionario.py',88),
  ('section -> AOTA NAMETAG AOTF','section',3,'p_section_aot_nametag','criaDicionario.py',89),
  ('content -> content statement','content',2,'p_content','criaDicionario.py',100),
  ('content -> statement','content',1,'p_content','criaDicionario.py',101),
  ('statement -> VAR IGUAL value','statement',3,'p_statement_VAR','criaDicionario.py',112),
  ('statement -> DOTTEDKEY IGUAL value','statement',3,'p_statement_DOTTEDKEY','criaDicionario.py',119),
  ('value -> DATA','value',1,'p_value','criaDicionario.py',132),
  ('value -> TIME','value',1,'p_value','criaDicionario.py',133),
  ('value -> list','value',1,'p_value','criaDicionario.py',134),
  ('value -> inlinetable','value',1,'p_value','criaDicionario.py',135),
  ('inlinetable -> AC vars FC','inlinetable',3,'p_inlinetable','criaDicionario.py',142),
  ('vars -> vars VIRG var','vars',3,'p_inlinetable_VARS','criaDicionario.py',149),
  ('vars -> var','vars',1,'p_inlinetable_VARS','criaDicionario.py',150),
  ('var -> VAR IGUAL value','var',3,'p_inlinetable_VAR','criaDicionario.py',162),
  ('value -> INT','value',1,'p_INT','criaDicionario.py',169),
  ('value -> INDIANFORMAT','value',1,'p_INDIANFORMAT','criaDicionario.py',176),
  ('value -> SIGNALINTS','value',1,'p_SIGNALINTS','criaDicionario.py',188),
  ('value -> OCTAL','value',1,'p_OCTAL','criaDicionario.py',195),
  ('value -> HEXADECIMAL','value',1,'p_HEXADECIMAL','criaDicionario.py',202),
  ('value -> BINARY','value',1,'p_BINARY','criaDicionario.py',209),
  ('value -> FLOAT','value',1,'p_FLOAT','criaDicionario.py',216),
  ('value -> STRING','value',1,'p_STRING','criaDicionario.py',223),
  ('value -> MULTILINESTRING','value',1,'p_MULTILINESTRING','criaDicionario.py',231),
  ('value -> BOOL','value',1,'p_BOOL','criaDicionario.py',238),
  ('list -> APR elements FPR','list',3,'p_list','criaDicionario.py',245),
  ('elements -> elements VIRG value','elements',3,'p_elements','criaDicionario.py',253),
  ('elements -> value','elements',1,'p_elements','criaDicionario.py',254),
]
